---
- name: Deploy Pizzaria App
  hosts: all
  become: false
  gather_facts: false
  vars:
    app_dir: /opt/pizzaria/app
    repo_url: https://github.com/rgiovann/devs2blu_devops_projeto_pizzaria.git
    repo_branch: main
  tasks:
    - name: Atualizar cache do apt
      apt:
        update_cache: yes
      become: yes
    - name: Instalar Git
      apt:
        name: git
        state: present
      become: yes
    - name: Clonar ou atualizar repositório
      git:
        repo: "{{ repo_url }}"
        dest: "{{ app_dir }}"
        version: "{{ repo_branch }}"
        force: true
      register: git_result
    - name: Mostrar commit atual
      debug:
        msg: "Deploy do commit: {{ git_result.after }}"
    - name: Parar containers antigos (se existirem)
      command: docker-compose down
      args:
        chdir: "{{ app_dir }}"
      ignore_errors: true
    - name: Build das imagens Docker
      command: docker-compose build --pull
      args:
        chdir: "{{ app_dir }}"
    - name: Iniciar containers
      command: docker-compose up -d
      args:
        chdir: "{{ app_dir }}"
    - name: Aguardar aplicação ficar disponível
      uri:
        url: http://localhost:8080/actuator/health
        status_code: 200
      register: health_check
      until: health_check.status == 200
      retries: 30
      delay: 2
      ignore_errors: true
    - name: Verificar status dos containers
      command: docker-compose ps
      args:
        chdir: "{{ app_dir }}"
      register: containers_status
      changed_when: false
    - name: Mostrar containers rodando
      debug:
        msg: "{{ containers_status.stdout_lines }}"
    - name: Resumo do deploy
      debug:
        msg:
          - OK Deploy concluído com sucesso!
          - "Commit: {{ git_result.after }}"
          - "URL: http://{{ inventory_hostname }}:8080"
